class PlaybackWorklet extends AudioWorkletProcessor{constructor(){super(),this.port.onmessage=this.handleMessage.bind(this),this.bufferQueue=[],this.currentChunk=null,this.currentChunkOffset=0,this.playbackStartedSignalled=!1,this.noMoreData=!1,this.playedAnyData=!1,this.silenceFramesCount=0;this.silenceThresholdBlocks=Math.ceil(1*sampleRate/128)}handleMessage(e){const t=e.data;if("no-more-data"!==(null===t||void 0===t?void 0:t.type))if(t instanceof ArrayBuffer)this.bufferQueue.push(t),this.silenceFramesCount=0;else if(t instanceof Int16Array){const e=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength);this.bufferQueue.push(e),this.silenceFramesCount=0}else console.error("Unsupported data type received.");else this.noMoreData=!0}process(e,t,s){var n;const r=null===(n=t[0])||void 0===n?void 0:n[0];if(!r)return!1;const a=r.length;let i=0;for(;i<a;){if(!this.currentChunk||this.currentChunkOffset>=this.currentChunk.length){if(!(this.bufferQueue.length>0)){for(let e=i;e<a;e++)r[e]=0;this.playbackStartedSignalled&&this.silenceFramesCount++;break}{const e=this.bufferQueue.shift();this.currentChunk=new Int16Array(e),this.currentChunkOffset=0,this.playbackStartedSignalled||(this.port.postMessage({type:"playback-started"}),this.playbackStartedSignalled=!0)}}const e=Math.min(a-i,this.currentChunk.length-this.currentChunkOffset);for(let t=0;t<e;t++)r[i+t]=this.currentChunk[this.currentChunkOffset+t]/32768;this.currentChunkOffset+=e,i+=e,this.playedAnyData=!0,this.silenceFramesCount=0}const h=0===this.bufferQueue.length,l=!this.currentChunk||this.currentChunkOffset>=this.currentChunk.length;return this.noMoreData&&h&&l&&this.playedAnyData?(this.port.postMessage({type:"playback-ended"}),this.resetStateAfterEnd(),!1):!(this.playbackStartedSignalled&&this.silenceFramesCount>this.silenceThresholdBlocks)||(this.port.postMessage({type:"playback-ended"}),console.warn("playback-ended signal detected after silence"),this.resetStateAfterEnd(),!1)}resetStateAfterEnd(){this.noMoreData=!1,this.playbackStartedSignalled=!1,this.playedAnyData=!1,this.silenceFramesCount=0}}registerProcessor("playback-worklet",PlaybackWorklet);